(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{554:function(s,a,t){"use strict";t.r(a);var r=t(15),n=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"七层负载均衡的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七层负载均衡的实现"}},[s._v("#")]),s._v(" 七层负载均衡的实现")]),s._v(" "),t("p",[s._v("基于URL等应用层信息的负载均衡,Nginx的Proxy是它一个很强大的功能，实现了7层负载均衡")]),s._v(" "),t("h3",{attrs:{id:"nginx的负载均衡实现的优点是什么？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx的负载均衡实现的优点是什么？"}},[s._v("#")]),s._v(" Nginx的负载均衡实现的优点是什么？")]),s._v(" "),t("ol",[t("li",[s._v("功能强大，性能卓越，运行稳定")]),s._v(" "),t("li",[s._v("配置简单灵活")]),s._v(" "),t("li",[s._v("能够自动的剔除工作不正常的后端服务器")]),s._v(" "),t("li",[s._v("上传文件使用异步模式")]),s._v(" "),t("li",[s._v("支持多种分配策略，可以分配权重，分配方式更加灵活")])]),s._v(" "),t("h3",{attrs:{id:"nginx负载均衡的策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx负载均衡的策略"}},[s._v("#")]),s._v(" Nginx负载均衡的策略")]),s._v(" "),t("p",[s._v("内置策略：IpHash、加权轮询\n扩展策略： fair策略、通用hash、一致性hash")]),s._v(" "),t("h4",{attrs:{id:"加权轮询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加权轮询"}},[s._v("#")]),s._v(" 加权轮询")]),s._v(" "),t("p",[s._v("首先将请求都分给高权重的机器，直到该机器的权重都降到比其他机器还要低，才开始将请求分给下一个高权重的机器。当所有的机器都down掉，Nginx会立即将所有机器的标志位清成初始状态，以避免造成所有的机器都处在timeout的状态")]),s._v(" "),t("h4",{attrs:{id:"iphash策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iphash策略"}},[s._v("#")]),s._v(" IpHash策略")]),s._v(" "),t("p",[s._v("Nginx内置的另一个负载均衡的策略，流程和轮训很类似，只是其中的算法和具体的策略有些变化，是一种变相的轮询算法")]),s._v(" "),t("h4",{attrs:{id:"fair策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fair策略"}},[s._v("#")]),s._v(" fair策略")]),s._v(" "),t("p",[s._v("根据服务器的响应时间判断负载情况，从中选出负载最轻的机器进行分流")]),s._v(" "),t("h4",{attrs:{id:"通用hash、一致性hash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通用hash、一致性hash"}},[s._v("#")]),s._v(" 通用hash、一致性hash")]),s._v(" "),t("p",[s._v("通用hash比较简单，可以以Nginx内置的变量为key进行hash，一致性hash采用了Nginx内置的一致性hash环，支持memcache")]),s._v(" "),t("h4",{attrs:{id:"nginx策略配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx策略配置"}},[s._v("#")]),s._v(" Nginx策略配置")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("http {\n   upstream cluster {\n       # 使用ip_hash\n       ip_hash;\n       # 指定weight使用权重进行轮询\n       server srv1 weight=12;\n       server srv2 weight=13;\n       server srv3 weight=12;\n   }\n   \n   server {\n       listen 80;\n       location / {\n           proxy_pass http://cluster;\n       }\n   }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h2",{attrs:{id:"四层负载均衡的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四层负载均衡的实现"}},[s._v("#")]),s._v(" 四层负载均衡的实现")]),s._v(" "),t("p",[s._v("通过报文中的目标地址和端口，再加上负载均衡设备设置的服务器选择方式，决定最终选择的内部服务器。LVS实现服务器集群的负载均衡有三种方式，NAT、DR和TUN")]),s._v(" "),t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://pan.baidu.com/disk/home#/all?vmode=list&path=%2F%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%2F%E6%85%95%E8%AF%BE%E7%BD%91%2Fphp%2F%E9%AB%98%E5%8F%AF%E7%94%A8%E9%AB%98%E6%80%A7%E8%83%BDyii2.0%2F10",target:"_blank",rel:"noopener noreferrer"}},[s._v("LVS负载均衡实现"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);