(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{546:function(a,t,s){"use strict";s.r(t);var r=s(15),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[a._v("#")]),a._v(" Array")]),a._v(" "),s("p",[a._v("数组，最简单而且应用最广泛的数据结构之一")]),a._v(" "),s("p",[a._v("特性：使用连续的内存来存储、数组中的元素必须是相同的类型或类型的衍生(同质数据结构)，元素可以通过下标直接访问")]),a._v(" "),s("h2",{attrs:{id:"linkedlist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[a._v("#")]),a._v(" LinkedList")]),a._v(" "),s("p",[a._v("链表、线性表的一种，最基本、最简单，也是最常用的数据结构")]),a._v(" "),s("p",[a._v("特性：元素之间的关系是一对一的关系(除来第一个和最后一个，其他元素都是首尾相连的)，顺序存储结构和链式存储结构两种方式")]),a._v(" "),s("h2",{attrs:{id:"stack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stack"}},[a._v("#")]),a._v(" Stack")]),a._v(" "),s("p",[a._v("栈，和队列类似，一个带有数据存储特性的数据结构\n特性：存储数据是先进后出的，栈只有一个出口，只能从栈顶部增加和移除元素")]),a._v(" "),s("h2",{attrs:{id:"heap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#heap"}},[a._v("#")]),a._v(" Heap")]),a._v(" "),s("p",[a._v("堆，一般情况下，堆叫二叉堆，近似完全二叉树的数据结构")]),a._v(" "),s("p",[a._v("特性：子节点的键值或者索引总是小于它的父节点，每个节点的左右子树又是一个二叉堆，跟节点最大的堆叫最大堆或者大根堆，最小的叫最小堆或者小根堆")]),a._v(" "),s("h2",{attrs:{id:"list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[a._v("#")]),a._v(" list")]),a._v(" "),s("p",[a._v("线性表,由零个或多个数据元素组成的有限序列\n特性:线性表是一个序列、0个元素构成的线性表是空表、第-个元素无先驱、最后一个元素无后继、其他元素都只有一-个先驱和后继、有长度,长度是元素个数,长度有限")]),a._v(" "),s("h2",{attrs:{id:"doubly-linked-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doubly-linked-list"}},[a._v("#")]),a._v(" doubly-linked-list")]),a._v(" "),s("p",[a._v("双向链表\n特性:每个元素都是-一个对象,每个对象有一-个关键字key和两个\n指针( next和prev )")]),a._v(" "),s("h2",{attrs:{id:"queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[a._v("#")]),a._v(" queue")]),a._v(" "),s("p",[a._v("队列\n特性:先进先出( FIFO)、并发中使用、可以安全将对象从一个任务传给另-个任务")]),a._v(" "),s("h2",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[a._v("#")]),a._v(" set")]),a._v(" "),s("p",[a._v("集合\n特性:保存不重复元素")]),a._v(" "),s("h2",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[a._v("#")]),a._v(" map")]),a._v(" "),s("p",[a._v("字典\n特性:关联数组、也被叫做字典或者键值对")]),a._v(" "),s("h2",{attrs:{id:"graph"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graph"}},[a._v("#")]),a._v(" graph")]),a._v(" "),s("p",[a._v("图\n特性:通常使用邻接矩阵和邻接表表示、前者易实现但是对于稀疏矩阵会浪费较多空间、后者使用链表的方式存储信息但是对于图搜索时间复杂度较高")]),a._v(" "),s("h2",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[a._v("#")]),a._v(" 示例")]),a._v(" "),s("p",[a._v("使用php实现双向链表")]),a._v(" "),s("p",[a._v("1,1,2,3,5,8,13,21,34....求第30位的数是多少,请用伪代码描述其实现方法。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Sarr =[1,1];\nfor($i=2;$i<30;Si++ )\n    $arr[$i] . $arr[$i-1] + $arr I Si 21\n)\nvar_dump($arr);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);