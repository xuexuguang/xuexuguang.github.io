(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{541:function(v,_,t){"use strict";t.r(_);var l=t(15),a=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"mysql索引的基础和类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引的基础和类型"}},[v._v("#")]),v._v(" MySQL索引的基础和类型")]),v._v(" "),t("h3",{attrs:{id:"索引的基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的基础"}},[v._v("#")]),v._v(" 索引的基础")]),v._v(" "),t("p",[v._v("索引类似于书的目录，想要查找对应的书籍内容，先查找对应的目录，再定位内容。存储引擎使用类似的方式进行查询，先去索引中找某个值，然后根据匹配的值找到对应的数据行。")]),v._v(" "),t("h3",{attrs:{id:"索引对性能的影响"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引对性能的影响"}},[v._v("#")]),v._v(" 索引对性能的影响")]),v._v(" "),t("ul",[t("li",[v._v("大大减少服务器扫描的数据量")]),v._v(" "),t("li",[v._v("帮助服务器避免排序和临时表")]),v._v(" "),t("li",[v._v("将随机I/O变顺序I/O")]),v._v(" "),t("li",[v._v("大大提高查询速度，降低写的速度，占用磁盘")])]),v._v(" "),t("h3",{attrs:{id:"索引的使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的使用场景"}},[v._v("#")]),v._v(" 索引的使用场景")]),v._v(" "),t("ul",[t("li",[v._v("对于非常小的表，大部分情况下全表扫描效率更高")]),v._v(" "),t("li",[v._v("中大型表，索引非常有效")]),v._v(" "),t("li",[v._v("特大型表，使用索引的代价将随之增加，可以使用分区技术")])]),v._v(" "),t("h3",{attrs:{id:"索引的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的类型"}},[v._v("#")]),v._v(" 索引的类型")]),v._v(" "),t("p",[v._v("索引有很多种类型，都实现在存储引擎层的")]),v._v(" "),t("ul",[t("li",[v._v("普通索引 ：最基本的索引，没有任何约束限制")]),v._v(" "),t("li",[v._v("唯一索引：与普通索引类似，但是具有唯一性约束")]),v._v(" "),t("li",[v._v("主键索引：特殊的唯一索引，不允许有空值")]),v._v(" "),t("li",[v._v("组合索引：将多个列组合在一起创建索引，可以覆盖多个列")]),v._v(" "),t("li",[v._v("外键索引：只有InnoDB类型的表才可以使用外键索引，保证数据的一致性、完整性和实现级联操作")]),v._v(" "),t("li",[v._v("全文索引：MySQL自带的全文索引只能用于MyISAN，并且只能对英文进行全文检索")])]),v._v(" "),t("p",[t("strong",[v._v("主键索引与唯一索引的区别")])]),v._v(" "),t("ul",[t("li",[v._v("一个表只有一个主键索引，但可以有多个唯一索引")]),v._v(" "),t("li",[v._v("主键索引一定是唯一索引，唯一索引不一定是主键")]),v._v(" "),t("li",[v._v("主键可以与外键构成参照完整性约束，防止数据不一致")])]),v._v(" "),t("h2",{attrs:{id:"mysql索引的创建原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引的创建原则"}},[v._v("#")]),v._v(" MySQL索引的创建原则")]),v._v(" "),t("ul",[t("li",[v._v("最适合索引的列是出现在WHERE子句中的列，或连接子句中的列而不是SELECT关键字后的列")]),v._v(" "),t("li",[v._v("索引列的基数越大，索引的效果越好")]),v._v(" "),t("li",[v._v("对字符串进行索引，应该制定一个前缀长度，可以节省大量的索引空间")]),v._v(" "),t("li",[v._v("根据情况创建复合索引，复合索引可以提高查询效率")]),v._v(" "),t("li",[v._v("避免创建过多索引，索引会额外占用磁盘空间，降低写操作效率")]),v._v(" "),t("li",[v._v("主键尽可能选择较短的数据类型，可以有效减少索引的磁盘占用提高查询效率")])]),v._v(" "),t("h2",{attrs:{id:"mysql索引的注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引的注意事项"}},[v._v("#")]),v._v(" MySQL索引的注意事项")]),v._v(" "),t("ul",[t("li",[v._v("复合索引遵循前缀原则")]),v._v(" "),t("li",[v._v("LIKE查询%不能在前，可以使用全文索引")]),v._v(" "),t("li",[v._v("column is null 可以使用索引")]),v._v(" "),t("li",[v._v("如果MySQL估计使用索引比全表扫描更慢，会放弃使用索引")]),v._v(" "),t("li",[v._v("如果or前的条件中的列有索引，后面的没有，索引不会被用到")]),v._v(" "),t("li",[v._v("列类型是字符串，查询时一定要给值加引号，否则索引失效")])])])}),[],!1,null,null,null);_.default=a.exports}}]);