(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{540:function(v,_,l){"use strict";l.r(_);var t=l(15),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h2",{attrs:{id:"mysql数据类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据类型"}},[v._v("#")]),v._v(" MySQL数据类型")]),v._v(" "),l("h3",{attrs:{id:"整数类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#整数类型"}},[v._v("#")]),v._v(" 整数类型")]),v._v(" "),l("ul",[l("li",[v._v("整数类型 TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT")]),v._v(" "),l("li",[v._v("属性：UNSIGNED")]),v._v(" "),l("li",[v._v("长度：可以为整数类型指定宽度，例如：INT(11)、对大多数应用是没有意义的，它不会限制值的合法范围，只会影响显示字符的个数。")])]),v._v(" "),l("h3",{attrs:{id:"实数类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#实数类型"}},[v._v("#")]),v._v(" 实数类型")]),v._v(" "),l("ul",[l("li",[v._v("实数类型 FLOAT、DOUBLE、DECIMAL")]),v._v(" "),l("li",[v._v("DECIMAL可存储比BIGINT还大的整数；可以用于存储精确的小数")]),v._v(" "),l("li",[v._v("FLOAT和DOUBLE支持使用标准的浮点进行计算")])]),v._v(" "),l("h3",{attrs:{id:"字符串类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#字符串类型"}},[v._v("#")]),v._v(" 字符串类型")]),v._v(" "),l("ul",[l("li",[v._v("字符串类型：VARCHAR、CHAR、TEXT、BLOB")]),v._v(" "),l("li",[v._v("VARCHAR类型用于存储可变字符串，比定长类型更节省空间，VARCHAR使用1或2个额外字节记录字符串的长度，列长度小于255字节，使用1个字节表示，否则用2个。如果存储的内容超出指定长度会被截断")]),v._v(" "),l("li",[v._v("CHAR是定长的，根据定义的字符串长度分配足够的空间，CHAR会根据需要采用空格进行填充以方便比较。")]),v._v(" "),l("li",[v._v("CHAR适合存储很短的字符串，或者所有的值接近同一个长度")]),v._v(" "),l("li",[v._v("CHAR长度超出设定的长度，会被截断")]),v._v(" "),l("li",[v._v("尽量避免使用BLOB/TEXT类型，查询会使用临时表，导致严重的性能开销。")])]),v._v(" "),l("h3",{attrs:{id:"枚举"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#枚举"}},[v._v("#")]),v._v(" 枚举")]),v._v(" "),l("ul",[l("li",[v._v("可以使用枚举代替常用的字符串类型")]),v._v(" "),l("li",[v._v("把不重复的集合存储成一个预定义的集合")]),v._v(" "),l("li",[v._v("非常紧凑，把列表值压缩到一个或两个字节")]),v._v(" "),l("li",[v._v("内部存储的是整数")]),v._v(" "),l("li",[v._v("尽量避免使用数字作为ENUM枚举的常量，易混乱")]),v._v(" "),l("li",[v._v("排序是按照内部存储的整数进行排序")]),v._v(" "),l("li",[v._v("枚举表会使表大小大大减小")])]),v._v(" "),l("h3",{attrs:{id:"日期和时间类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间类型"}},[v._v("#")]),v._v(" 日期和时间类型")]),v._v(" "),l("ul",[l("li",[v._v("尽量使用TIMESTAMP,比DATETIME空间效率高")]),v._v(" "),l("li",[v._v("用整数保存时间戳的格式通常不方便处理")]),v._v(" "),l("li",[v._v("如果需要存储微妙，可以使用bigint存储")])]),v._v(" "),l("h3",{attrs:{id:"列属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#列属性"}},[v._v("#")]),v._v(" 列属性")]),v._v(" "),l("ul",[l("li",[v._v("auto_increment")]),v._v(" "),l("li",[v._v("default")]),v._v(" "),l("li",[v._v("not null")]),v._v(" "),l("li",[v._v("zerofill")])]),v._v(" "),l("h2",{attrs:{id:"mysql存储引擎"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mysql存储引擎"}},[v._v("#")]),v._v(" MySQL存储引擎")]),v._v(" "),l("p",[v._v("InnoDB表引擎")]),v._v(" "),l("ul",[l("li",[v._v("默认事务型引擎，最重要最广泛的存储引擎，性能非常优秀")]),v._v(" "),l("li",[v._v("数据存储在共享表空间，可以通过配置分开")]),v._v(" "),l("li",[v._v("对主键查询的性能高于其他类型的存储引擎")]),v._v(" "),l("li",[v._v("内部做了很多优化，从磁盘读取数据时自动在内存构建hash索引，插入数据时自动构建插入缓冲区")]),v._v(" "),l("li",[v._v("通过一些机制和工具支持真正的热备份")]),v._v(" "),l("li",[v._v("支持崩溃后的安全恢复")]),v._v(" "),l("li",[v._v("支持行级锁")]),v._v(" "),l("li",[v._v("支持外键")])]),v._v(" "),l("p",[v._v("MyISAM表引擎")]),v._v(" "),l("ul",[l("li",[v._v("拥有全文索引、压缩、空间函数")]),v._v(" "),l("li",[v._v("不支持事务和行级锁，不支持崩溃后的安全恢复")]),v._v(" "),l("li",[v._v("表存储在MYD和MYI的文件中")]),v._v(" "),l("li",[v._v("设计简单，某些场景下性能很好")])]),v._v(" "),l("p",[v._v("其他表")]),v._v(" "),l("ul",[l("li",[v._v("Archive、Blackhole、CSV、Memory")])]),v._v(" "),l("h2",{attrs:{id:"mysql锁机制"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mysql锁机制"}},[v._v("#")]),v._v(" MySQL锁机制")]),v._v(" "),l("p",[v._v("读锁(共享锁)")]),v._v(" "),l("ul",[l("li",[v._v("共享的，不堵塞，多个用户同时读一个资源，互不干扰")])]),v._v(" "),l("p",[v._v("写锁(排他锁)")]),v._v(" "),l("ul",[l("li",[v._v("排他的， 一个写锁会阻塞其他的写锁和读锁，这样可以只允许一个人进行写入，防止其他用户读取正在写入的资源")])]),v._v(" "),l("p",[v._v("锁粒度")]),v._v(" "),l("ul",[l("li",[v._v("表锁，表锁的开销性能最小，会锁整张表，MYISAM默认使用表锁")]),v._v(" "),l("li",[v._v("行锁：最大程度的支持并发处理，但也带来了锁开销，InnoDB实现行级锁")])]),v._v(" "),l("h2",{attrs:{id:"mysql事务处理、存储过程、触发器"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mysql事务处理、存储过程、触发器"}},[v._v("#")]),v._v(" MySQL事务处理、存储过程、触发器")]),v._v(" "),l("p",[v._v("事务处理")]),v._v(" "),l("ul",[l("li",[v._v("MySQL提供事务处理的表引擎InnoDB")]),v._v(" "),l("li",[v._v("服务器层不管理事务，由下层的引擎实现，所以同一个事务中，使用多种存储引擎不靠谱")]),v._v(" "),l("li",[v._v("在非事务的表上执行事务操作MySQL不会发出提醒，也不会报错")])]),v._v(" "),l("p",[v._v("存储过程")]),v._v(" "),l("ul",[l("li",[v._v("为以后的使用而保存的一条或者多条MySQL语句的集合")]),v._v(" "),l("li",[v._v("存储过程就是有业务逻辑和流程的集合")]),v._v(" "),l("li",[v._v("可以在存储过程中创建表，更新数据，删除等")])]),v._v(" "),l("p",[v._v("触发器")]),v._v(" "),l("ul",[l("li",[v._v("可以通过数据的相关表实现级联更改")]),v._v(" "),l("li",[v._v("监控某个字段的更改做相应的处理")])])])}),[],!1,null,null,null);_.default=i.exports}}]);